{
  "version": 3,
  "sources": ["http/sw.js"],
  "sourcesContent": ["/*\n * SPDX-FileCopyrightText:  Copyright 2023 Roland Csaszar\n * SPDX-License-Identifier: AGPL-3.0-or-later\n *\n * Project:  Gregor\n * File:     sw.js\n * Date:     25.Oct.2023\n *\n * ==============================================================================\n */\n/* eslint-disable function-paren-newline */\n/* eslint-disable implicit-arrow-linebreak */\n\n/**\n * `version` is the name of the cache, including a timestamp.\n * This is filled by `gulp bundle` when copying `sw.js` to the directory `http`.\n */\n// eslint-disable-next-line no-undef\nconst version = \"Gregor-2119\";\n\n/**\n *  `manifest` is an array holding the paths to all files to cache.\n *  This is changed against the real list of files by `gulp bundle` when copying\n * `sw.js` to the directory `http`.\n */\n// eslint-disable-next-line no-undef\nconst manifest = [\n\"/404.html\",\"/app.js\",\"/app.js.map\",\"/apple-touch-icon.png\",\"/browserconfig.xml\",\"/favicon-16x16.png\",\"/favicon-32x32.png\",\"/favicon.ico\",\"/favicon.svg\",\"/icons/icon-192.png\",\"/icons/icon-512.png\",\"/icons/icon.svg\",\"/icons/maskable_128.png\",\"/icons/maskable_144.png\",\"/icons/maskable_16.png\",\"/icons/maskable_192.png\",\"/icons/maskable_256.png\",\"/icons/maskable_32.png\",\"/icons/maskable_48.png\",\"/icons/maskable_512.png\",\"/icons/maskable_72.png\",\"/icons/maskable_96.png\",\"/icons/transparent_128.png\",\"/icons/transparent_144.png\",\"/icons/transparent_16.png\",\"/icons/transparent_192.png\",\"/icons/transparent_256.png\",\"/icons/transparent_32.png\",\"/icons/transparent_48.png\",\"/icons/transparent_512.png\",\"/icons/transparent_72.png\",\"/icons/transparent_96.png\",\"/index.html\",\"/manifest.json\",\"/mstile-144x144.png\",\"/mstile-150x150.png\",\"/mstile-310x150.png\",\"/mstile-310x310.png\",\"/mstile-70x70.png\",\"/safari-pinned-tab.svg\",\"/sw.js\",\"/sw.js.map\",\"/\"\n];\n\n/*\n * ==============================================================================\n *  Installation\n */\n\n/**\n * Install the service worker.\n * On installation, all files Parcel knows about are added to the cache.\n */\nasync function install() {\n    const cache = await caches.open(version);\n    await cache.addAll(manifest);\n    // eslint-disable-next-line no-console\n    console.log(`[Service Worker] installed files to ${version}`);\n}\n\naddEventListener(\"install\", (event) => {\n    event.waitUntil(install());\n});\n\n/*\n * ==============================================================================\n *  Activation\n */\n\n/**\n * Activate service worker.\n * On activation all files from older versions of the cache are deleted.\n */\nasync function activate() {\n    const keys = await caches.keys();\n    await Promise.all(keys.map((key) => key !== version && caches.delete(key)));\n    // eslint-disable-next-line no-console\n    console.log(`[Service Worker] activated`);\n}\n\naddEventListener(\"activate\", (event) => event.waitUntil(activate()));\n\n/*\n * ==============================================================================\n *  Fetching\n */\n\n/**\n * Fetches the given URL, either from cache or the server.\n * @param {RequestInfo} request The request to fulfill.\n * @returns {Response} The fetched URL as `Response`.\n */\nasync function fetchFromCache(request) {\n    const cachedResponse = await caches.match(request, { ignoreSearch: true });\n    if (cachedResponse) {\n        // eslint-disable-next-line no-console\n        console.log(`[Service Worker] cache hit: ${request.url}`);\n        return cachedResponse;\n    }\n    // eslint-disable-next-line no-console\n    console.log(`[Service Worker] fetching ${request.url}`);\n\n    const response = await fetch(request).catch(return404);\n    if (response.ok) {\n        return response;\n    }\n    // eslint-disable-next-line no-console\n    console.log(`[Service Worker] haven't found ${request.url}`);\n    return return404(\"URL not found\");\n}\n\naddEventListener(\"fetch\", (event) =>\n    event.respondWith(fetchFromCache(event.request))\n);\n\n/**\n * ==============================================================================\n *  Return the 404 error page.\n */\n\n/**\n * Return the 404 error page.\n * @param {string} err\n * @returns {Promise<Response | undefined>} The 404 HTML page if cached.\n */\nasync function return404(err) {\n    // eslint-disable-next-line no-console\n    console.log(`[Service Worker] Error: \"${err}\"`);\n    return caches.match(\"/404.html\");\n}\n"],
  "mappings": "gOAkBA,IAAMA,EAAU,cAQVC,EAAW,CACjB,YAAY,UAAU,cAAc,wBAAwB,qBAAqB,qBAAqB,qBAAqB,eAAe,eAAe,sBAAsB,sBAAsB,kBAAkB,0BAA0B,0BAA0B,yBAAyB,0BAA0B,0BAA0B,yBAAyB,yBAAyB,0BAA0B,yBAAyB,yBAAyB,6BAA6B,6BAA6B,4BAA4B,6BAA6B,6BAA6B,4BAA4B,4BAA4B,6BAA6B,4BAA4B,4BAA4B,cAAc,iBAAiB,sBAAsB,sBAAsB,sBAAsB,sBAAsB,oBAAoB,yBAAyB,SAAS,aAAa,GAC76B,EAWA,SAAeC,GAAU,QAAAC,EAAA,sBAErB,MADc,MAAM,OAAO,KAAKH,CAAO,GAC3B,OAAOC,CAAQ,EAE3B,QAAQ,IAAI,uCAAuCD,CAAO,EAAE,CAChE,GAEA,iBAAiB,UAAYI,GAAU,CACnCA,EAAM,UAAUF,EAAQ,CAAC,CAC7B,CAAC,EAWD,SAAeG,GAAW,QAAAF,EAAA,sBACtB,IAAMG,EAAO,MAAM,OAAO,KAAK,EAC/B,MAAM,QAAQ,IAAIA,EAAK,IAAKC,GAAQA,IAAQP,GAAW,OAAO,OAAOO,CAAG,CAAC,CAAC,EAE1E,QAAQ,IAAI,4BAA4B,CAC5C,GAEA,iBAAiB,WAAaH,GAAUA,EAAM,UAAUC,EAAS,CAAC,CAAC,EAYnE,SAAeG,EAAeC,EAAS,QAAAN,EAAA,sBACnC,IAAMO,EAAiB,MAAM,OAAO,MAAMD,EAAS,CAAE,aAAc,EAAK,CAAC,EACzE,GAAIC,EAEA,eAAQ,IAAI,+BAA+BD,EAAQ,GAAG,EAAE,EACjDC,EAGX,QAAQ,IAAI,6BAA6BD,EAAQ,GAAG,EAAE,EAEtD,IAAME,EAAW,MAAM,MAAMF,CAAO,EAAE,MAAMG,CAAS,EACrD,OAAID,EAAS,GACFA,GAGX,QAAQ,IAAI,kCAAkCF,EAAQ,GAAG,EAAE,EACpDG,EAAU,eAAe,EACpC,GAEA,iBAAiB,QAAUR,GACvBA,EAAM,YAAYI,EAAeJ,EAAM,OAAO,CAAC,CACnD,EAYA,SAAeQ,EAAUC,EAAK,QAAAV,EAAA,sBAE1B,eAAQ,IAAI,4BAA4BU,CAAG,GAAG,EACvC,OAAO,MAAM,WAAW,CACnC",
  "names": ["version", "manifest", "install", "__async", "event", "activate", "keys", "key", "fetchFromCache", "request", "cachedResponse", "response", "return404", "err"]
}
